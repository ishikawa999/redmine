name: Test

on:
  push:

jobs:
  test:
    strategy:
      matrix:
        ruby_version: ['3.1', '3.2', '3.3']      # テスト対象のRubyバージョン
        database: ['postgresql', 'mysql2', 'sqlite3']  # 使用するデータベース

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        options: >-
          --health-cmd "pg_isready -U user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testdb

      mysql:
        image: mysql:8
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testdb
          MYSQL_USER: user
          MYSQL_PASSWORD: password

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby_version }}
          bundler-cache: true

      - name: Create config/database.yml
        run: |
          cat > config/database.yml <<EOF
          test:
            adapter: ${{ matrix.database }}
            database: testdb
            username: user
            password: password
            host: localhost
          EOF

      - name: Stop Unused Services
        run: |
          if [ "${{ matrix.database }}" != "postgresql" ]; then
            docker stop postgres || true
          fi
          if [ "${{ matrix.database }}" != "mysql2" ]; then
            docker stop mysql || true
          fi

      - name: Install dependencies
        run: bundle install

      - name: Set up Database
        run: |
          bundle exec rake db:setup RAILS_ENV=test

      - name: Run Tests
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: |
          bundle exec rake test RAILS_ENV=test
