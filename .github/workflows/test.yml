name: Test

on:
  push:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        supported_ruby_version: ['3.1', '3.2', '3.3']
        supported_database: ['postgresql', 'mysql2', 'sqlite3']

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        options: >-
          --health-cmd "pg_isready -U user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testdb
      mysql:
        image: mysql:8
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testdb
          MYSQL_USER: user
          MYSQL_PASSWORD: password

    steps:
      - uses: browser-actions/setup-chrome@v1

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update apt and install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential \
            bzr git mercurial subversion cvs \
            ghostscript \
            gsfonts \
            imagemagick libmagick++-dev \
            libnss3-dev

      - name: Configure ImageMagick for PDF support
        run: |
          sudo sed -ri 's/(rights)="none" (pattern="PDF")/\1="read" \2/' /etc/ImageMagick-6/policy.xml

      - name: Create config/database.yml
        run: |
          cat > config/database.yml <<EOF
          test:
            adapter: ${{ matrix.supported_database }}
            database: testdb
            username: user
            password: password
            host: 127.0.0.1
          EOF

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.supported_ruby_version }}
          bundler-cache: true

      - name: Prepare Test Environment
        run: |
          # Disabled Mercurial due to installation difficulties. issue: https://www.redmine.org/issues/33784
          SCMS=subversion,git,filesystem,bazaar,cvs bundle exec rake ci:about ci:setup db:environment:set RAILS_ENV=test

      - name: Run tests
        run: |
          bundle exec rake test:all RAILS_ENV=test
        env:
          GOOGLE_CHROME_OPTS_ARGS: "headless,disable-gpu,no-sandbox,disable-dev-shm-usage"

      - name: Store system test screenshots Artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots-${{ matrix.supported_ruby_version }}-${{ matrix.supported_database }}-${{ github.run_id }}
          path: tmp/screenshots
          if-no-files-found: ignore