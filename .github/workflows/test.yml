name: Database Compatibility Tests

on:
  push:

jobs:
  test:
    strategy:
      matrix:
        ruby_version: ['3.1', '3.2', '3.3']  # サポートしているRubyのバージョンを指定
        database: ['postgresql', 'mysql', 'sqlite']

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby_version }}
        bundler-cache: true  # Bundlerのキャッシュを有効化

    - name: Install Dependencies
      run: |
        sudo apt-get update
        if [ "${{ matrix.database }}" == "postgresql" ]; then
          sudo apt-get install -y postgresql libpq-dev
        elif [ "${{ matrix.database }}" == "mysql" ]; then
          sudo apt-get install -y mysql-server libmysqlclient-dev
        elif [ "${{ matrix.database }}" == "sqlite" ]; then
          sudo apt-get install -y sqlite3 libsqlite3-dev
        fi

    - name: Configure Database
      run: |
        if [ "${{ matrix.database }}" == "postgresql" ]; then
          sudo service postgresql start
          psql -c "CREATE USER myuser WITH PASSWORD 'mypassword';" -U postgres
          psql -c "CREATE DATABASE mydatabase OWNER myuser;" -U postgres
          export DATABASE_URL="postgresql://myuser:mypassword@localhost/mydatabase"
        elif [ "${{ matrix.database }}" == "mysql" ]; then
          sudo service mysql start
          mysql -e "CREATE DATABASE mydatabase;"
          mysql -e "CREATE USER 'myuser'@'localhost' IDENTIFIED BY 'mypassword';"
          mysql -e "GRANT ALL ON mydatabase.* TO 'myuser'@'localhost';"
          export DATABASE_URL="mysql2://myuser:mypassword@localhost/mydatabase"
        elif [ "${{ matrix.database }}" == "sqlite" ]; then
          export DATABASE_URL="sqlite3::memory:"
        fi

    - name: Install Gems
      run: |
        bundle install

    - name: Run Tests
      env:
        DATABASE_URL: ${{ env.DATABASE_URL }}
      run: |
        bundle exec rake db:migrate RAILS_ENV=test  # 必要に応じてデータベースのマイグレーション
        bundle exec rake test RAILS_ENV=test  # テストの実行
